name: Build and Deploy ASP.NET Web App

# Controls when the workflow will run
on:
  push:
    branches: [ main ] # Triggers the workflow on push events to the main branch
  # pull_request:
  #   branches: [ main ] # Optionally, trigger on pull requests to main for CI
  workflow_dispatch: # Allows manual triggering of the workflow

env:
  DOTNET_VERSION: '8.0.x' # Specify your .NET version
  # SOLUTION_FILE_PATH: YourSolution.sln # Optional: Path to your solution file if not in root
  PROJECT_FILE_PATH: 'RASPortal.csproj' # Path to your main web project file
  CONFIGURATION: 'Release' # Build configuration (e.g., Debug, Release)
  OUTPUT_PATH: '${{ github.workspace }}/publish' # Directory to store the published output

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: windows-latest # Or windows-latest, depending on your project/deployment needs

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE_PATH || env.PROJECT_FILE_PATH }}
      # If you have a specific solution file, uncomment and set SOLUTION_FILE_PATH
      # run: dotnet restore ${{ env.SOLUTION_FILE_PATH }}

    - name: Build
      run: dotnet build ${{ env.PROJECT_FILE_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore
      # If you build the solution, ensure the project path is correct for publishing later
      # run: dotnet build ${{ env.SOLUTION_FILE_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore

    # Optional: Run tests
    # - name: Test
    #   run: dotnet test --no-build --configuration ${{ env.CONFIGURATION }} --verbosity normal

    - name: Publish
      run: dotnet publish ${{ env.PROJECT_FILE_PATH }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.OUTPUT_PATH }}

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: ${{ env.OUTPUT_PATH }}

  deploy:
    name: Deploy
    needs: build-and-publish # Ensures build-and-publish job completes first
    runs-on: ubuntu-latest # Or windows-latest, choose based on deployment target
    # environment: Production # Optional: Define an environment for protection rules/secrets

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: webapp
        path: ${{ env.OUTPUT_PATH }} # Download to the same path for consistency

    # Deployment steps will vary based on your hosting provider
    # See specific examples below
    - name: 'Example: Echo deployment path (replace with actual deployment)'
      run: |
        echo "Deploying from ${{ env.OUTPUT_PATH }}"
        ls -R ${{ env.OUTPUT_PATH }}
